{| align=&quot;right&quot; style=&quot;padding-left:25px;&quot;
| __TOC__
|}
===Upgrading SuiteCRM=== 
Log into your SuiteCRM instance to use the Upgrade Wizard. There is currently no silent upgrade path available for SuiteCRM.
CAUTION: It is strongly recommended that you run the upgrade process on a copy of your production system.
===Compatibility matrix for upgrade===
PHP version
5.2.1-5.2.6, 5.2.8-5.2.15, 5.2.17, 5.3.0 - 5.3.6
Databases
MySQL - 5.0x, 5.1
MSSQL - 2005, 2008
Operating systems
Windows: Sugar runs on any OS that runs PHP
Linux: Sugar runs on any OS that runs PHP
Mac: Sugar runs on any OS that runs PHP
===Upgrading to SuiteCRM from SugarCRM Community Edition===
Upgrade paths are available for SugarCRM to SuiteCRM from the SuiteCRM downloads section of the SuiteCRM website. To validate what versions of SugarCRM are compatible with the respective SuiteCRM versions, please check the table below:
SuiteCRM Version
SugarCRM Version
SuiteCRM 7.0.1
SugarCRM 6.5.x
SuiteCRM 7.0.0
SugarCRM 6.5.x

===Upgrade prerequisites===
*Backup your current SuiteCRM directory and database before beginning the upgrade process. 
*Disable op-code caching before upgrading your SuiteCRM installation if op-code caching is enabled in the PHP configuration file. You can enable it after the upgrade process is complete. 
*Increase the default value of the parameters listed below before you begin the upgrade process if you are using Zend Core 2.0: 
**Navigate to C:\Program Files\Zend\Core\etc\fastcgi.conf and increase the default value for ConnectionTimeout to 3000 seconds and RequestTimeout to 6000 seconds. 
**Navigate to the php.ini file and increase the default value of max_execution_time to 6000 seconds. 
*Perform the following for the large size of the upgrade files: 
**Modify and save the value of Maximum upload size to 21000000 (20MB) in the Advanced section of the System Settings page of your current SuiteCRM installation. 
**Navigate to the php.ini file on your web server and configure the parameters listed below in the Advanced section of the System Settings page of your current SuiteCRM installation: 
***Set post_max_size to at least 60MB 
***Set upload_max_filesize settings to at least 60MB 
***Set max_input_time to a large number 
***Set memory_limit to 256MB 
Restart the web server and begin the upgrade process. 
*Ensure that LimitRequestBody is set to a large number or use the default value of 2GB if you are using an Apache web server and LimitRequestBody is set in the httpd.conffile. Restart Apache and begin the upgrade process. 
*Ensure that the webserver user has write permissions to the SuiteCRM database. The upgrade to SuiteCRM 7.0.x will add and replace files in several locations including the SuiteCRM root directory. The webserver user must have write permissions for the root folder and all sub-directories during the upgrade process. 
*The process of upgrading can take up to 30 minutes. Set the CGI script timeout to more than the default 300 seconds to ensure that the CGI application does not time out if you are using the IIS web server. 
*Save PHP files for customized modules (for example, accounts.php) in the Customs directory and not within the main module. Existing customizations may be overridden by changes in SuiteCRM 7.0.x during upgrade. 
===Upgrade considerations===
The Dynamic Teams feature requires some database schema changes across all modules as part of the upgrade process. For larger databases, this operation can take some time to complete. Follow the steps listed below to ensure a smooth upgrade process: 
#Test your upgrade on a development instance instead of the production instance. 
#Use the Silent Upgrade method through the command line interface to conduct the upgrade instead of the Upgrade Wizard inside the application if your database contains more than 10000 records per table. 
#Log into the application as an Administrator and use the Repair option to repair and rebuild the database after the upgrade is complete.
===Using the Upgrade Wizard===
The Upgrade Wizard provides a quick way to upgrade to the latest version of the SuiteCRM application. It includes critical upgrade logic as well as the SQL commands needed to upgrade the application. 
Ensure that the config.php file for your installation, located in the SuiteCRM root directory, is writable, before using the Upgrade Wizard. 
Note: Manual upgrades by file replacements and running the upgrade SQL are not supported. 
===Upgrading SuiteCRM using the Upgrade Wizard===
#Download the appropriate SuiteCRM Upgrade zip file from the SuiteCRM website or GitHub Repository to your local machine.
#Log into your existing SuiteCRM application as the administrator and click admin on the right-hand corner of the page. 
#Click Upgrade Wizard in the Systems panel of the Administration Home page. 
#*This displays the Upgrade Wizard page. 
#Click Next. 
#*This displays the System Checks page. and SuiteCRM begins the system check process. The Systems Check page indicates that there were no issues if the system check process completes successfully. Issues with file permissions, database, and server settings are listed on the page if the system check process encountered any problems. 
#Click Next if the system check is successful. 
#*This displays the Upload an Upgrade page. 
#Click Browse, and navigate to the location of the upgrade zip file and select it. 
#*The path to the file displays in the Upload an upgrade field. 
#Click Upload Upgrade to upload the package to the SuiteCRM application. 
#*The system uploads the package and displays it on the page. Use the Delete Package button to remove the package if necessary. 
#Click Next. 
#*This displays the Preflight Check page. 
#*Click Show Schema Change Script toview differences in the SuiteCRM databases schema between your current and new SuiteCRM versions. 
#*By default, the Upgrade Wizard Runs SQL option is selected as the database update method. Select Manual SQL Queries from the Database Update Method drop-down list and select the Check when SQL has been manually run box, if you ran the SQL queries manually. 
#Click Recheck to rerun Preflight Check. Click Next to skip this step. 
#*This displays the Commit Upgrade page. 
#*You can also click Show to see a list of files that were copied and the rebuilt results. You can also view skipped queries. 
#Click Next. 
#*During the upgrade process, SuiteCRM performs a three-way merge between the customized instance on old version, default instance on old version, and default instance on new version. This three-way merge adds any fields that have been added to the default module layouts in the new version to the corresponding module layouts in the existing version, if the module layouts in the old version were not customized through Studio (or in the appropriate upgrade-safe way) prior to the upgrade. The three-way merge also changes the placement of fields in non-Studio-customized module layouts to match the placement in the default module layouts. 
#*SuiteCRM displays the Confirm Layouts page as Step 5 of the upgrade process if the existing module layouts have been customized, and there are changes to the default fields and field placement in the new module layouts. 
#*The Confirm Layouts page lists the module layouts that have changed in the new version. The administrator has the option of applying the changes to the existing module layouts. By default, all of the listed module layouts are selected to be merged during the upgrade. 
#*For example, in 6.1.0, SuiteCRM added the Assigned To fields to the default Detail View and Edit View layouts for Notes and for Email Templates. If the instance being upgraded has a customized EditView layout for Notes, but no customized layouts for Email Templates, the following will occur during the upgrade: 
#;a. The Confirm Layouts page appears as Step 5 in the Upgrade Wizard 
#;b. The Confirm Layouts page displays the Notes module with the EditView and DetailView layouts. The Email Templates layouts do not display on the Confirm Layouts page because the existing layouts were not customized. 
#;c. The Administrator has the option of choosing to merge the changes in the Notes module with the existing customized EditView layout. 
#Uncheck the module if you do not want to add the new fields to a module. 
#Click Next. 
#*This displays a message confirming that the layouts were successfully merged (if you chose to update your modules). 
#Click Next. 
#The Debrief page confirms the upgrade installation. Complete the steps for manual merging of files or running SQL queries now. 
#Click Done. 
#*This displays the Home page indicating that the upgrade is complete. 
#Click Repair and select the Rebuild Relationships andRebuild Extensions options in the Systems panel of the Administration Home page. 
#*For more information, see Repair. 
#Manually merge the files by extracting the skipped file from the patch zip file if you unchecked any files to prevent the Upgrade Wizard from overwriting them. Merge the file installed in the SuiteCRM application directory. 
#*Note:Check the upgradeWizard.log file in the SuiteCRM folder for information on unsuccessful SuiteCRM upgrades.

===Uninstalling a SuiteCRM instance===
Follow these steps to uninstall your SuiteCRM instance:
#Navigate to the directory within your web server where SuiteCRM is located.
#Remove the SuiteCRM directory(Linux: rm -r &lt;suitedirectory&gt; if you wish to be prompted, rm -rf &lt;suitedirectory&gt; if you wish to delete the directory without being prompted).
#Delete the SuiteCRM database schema from your server database(default is “suitecrm”, this will differ if this has been renamed during the installation process).

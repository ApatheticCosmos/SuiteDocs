<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>18. Performance Tweaks</title>
<link href="stylesheet.css" type="text/css" rel="stylesheet" />
</head>
<body>
<div>
<h2 id="leanpub-auto-performance-tweaks">
<span class="section-number">18. </span>Performance Tweaks</h2>

<p>In most cases the performance of SuiteCRM should not be an issue. However in the
case of large datasets or systems with many users you may notice some performance degradation.
These changes can help improve performance.</p>

<h3 id="leanpub-auto-server">Server</h3>
<p>The server that SuiteCRM runs on is, of course, very important when it comes to
the kind of performance you can expect. A full guide on server setup is outside
the scope of this book. However there are some things you can do to ensure
that you get the best performance out of SuiteCRM.</p>

<h4 id="leanpub-auto-php">PHP</h4>

<p>Installing a PHP opcode cache will increase the performance of all
PHP files. These work by caching the compilation of PHP files resulting in less
work on each request. Furthermore SuiteCRM will use the caching API of some PHP accelerators
which will further increase performance. If you are using Linux then <a href="http://php.net/manual/en/book.apc.php">APC</a>
is the usual choice. Windows users should check out <a href="http://php.net/manual/en/book.wincache.php">WinCache</a>.</p>

<h4 id="leanpub-auto-mysql">MySQL</h4>
<p>MySQL is notorious for having small default settings. Fully optimising MySQL is outside
the scope of this book (however checkout <a href="http://mysqltuner.pl">mysqltuner.pl</a> for a
helpful Perl script which will provide setting recommendations - note that you should be careful when
running files from an unknown source). One small change
that can make a big difference is increasing the <code>innodb_buffer_pool_size</code>.</p>

<p>If you have migrated or imported a significant amount of data it is possible that some tables will
be fragmented. Running <code>OPTIMIZE TABLE tablename</code> can increase performance.</p>

<h3 id="leanpub-auto-indexes">Indexes</h3>
<p>Adding indexes on the fields of modules can improve database performance. The
core modules usually have important fields indexed. However if you have created
a new module or added new, often searched fields to a module then these fields may benefit
from being indexed. See the <a href="chap03.xhtml#vardefs-chapter">Vardef</a> chapter for adding indexes.</p>

<h3 id="leanpub-auto-config-changes">Config Changes</h3>
<p>The following are some config settings that can be used to improve performance.
Please note that in most cases you will have better performance gains by first
following the steps in previous sections. These settings should be set in the
config_override.php file. See the chapter on the <a href="chap09.xhtml#config-chapter">Config</a> files
for more information.</p>

<div class="code-block">
<div class="highlight"><pre><code class="nv">$sugar_config</code><code class="p">[</code><code class="s1">'developerMode'</code><code class="p">]</code> <code class="o">=</code> <code class="k">false</code><code class="p">;</code>
</pre></div>

</div>
<p>Unless you are actively developing on an instance developerMode should be off.
Otherwise each page request will cause cached files to be reloaded.</p>

<div class="code-block">
<div class="highlight"><pre><code class="nv">$sugar_config</code><code class="p">[</code><code class="s1">'disable_count_query'</code><code class="p">]</code> <code class="o">=</code> <code class="k">true</code><code class="p">;</code>
</pre></div>

</div>

<p>For systems with large amounts of data the count queries on subpanels used for
the pagination controls can become slow thereby causing the page to be sluggish or
outright slow to load. Disabling these queries can improve performance dramatically
on some pages.</p>

<div class="code-block">
<div class="highlight"><pre><code class="nv">$sugar_config</code><code class="p">[</code><code class="s1">'disable_vcr'</code><code class="p">]</code> <code class="o">=</code> <code class="k">true</code><code class="p">;</code>
</pre></div>

</div>

<p>By default opening the detail view of a record from the list view will also load
the other records in the list to allow for easy moving through records. If you
do not use this feature, or, if loading the detail view for some records has become
slow, you can disable this feature.</p>

<div class="code-block">
<div class="highlight"><pre><code class="nv">$sugar_config</code><code class="p">[</code><code class="s1">'list_max_entries_per_page'</code><code class="p">]</code> <code class="o">=</code> <code class="s1">'10'</code><code class="p">;</code>
</pre></div>

</div>

<p>The number of records shown in each page of the list view can be decreased. This
will result in a slight increase in performance on list view pages.</p>

<div class="code-block">
<div class="highlight"><pre><code class="nv">$sugar_config</code><code class="p">[</code><code class="s1">'logger'</code><code class="p">][</code><code class="s1">'level'</code><code class="p">]</code> <code class="o">=</code> <code class="s1">'fatal'</code><code class="p">;</code>
</pre></div>

</div>

<p>Lowering the log level means that there will be less log messages to write to disk
on each request. This will slightly (very slightly) increase performance.</p>
</div>
</body>
</html>
